/*
* Device tree for Hilscher netX4000 based NXHX4000-JTAG+ rev2 boards
*
* arch/arm/boot/dts/nxhx4000-jtag-plus_rev2.dts
*
* (C) Copyright 2015 Hilscher Gesellschaft fuer Systemautomation mbH
* http://www.hilscher.com
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License as
* published by the Free Software Foundation; version 2 of
* the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
*/

/dts-v1/;

#include "netx4000-common.dtsi"

/ {
	model = "Hilscher NXHX4000-JTAG+ rev2";
	compatible = "hilscher,netx4000";

	chosen {
		linux,stdout-path = &uart0;
	};

	memory {
		device_type = "memory";
		reg = <0x40000000 0x40000000>;
	};
};

&smc353 {
	status = "ok";
	#address-cells = <1>;
	#size-cells = <1>;
	/* Note: supported ecc-mode is limited to bch-ecc */
	nand0: nand@0 {
		status = "disabled";
		pinctrl-names = "default";
		pinctrl-0 = <&nand8_pins>;
		compatible = "arm,pl353-nand-r2p1";
		reg = <0x0a000000 0x1000000>;
		cs-addr = <0x0a>;
		if = <1>; /* interface */
		cs = <0>; /* chipselect on interface <if> */
		nand,tAR-ns=<20>;
		nand,tCLR-ns=<20>;
		nand,tRC-ns=<40>;
		nand,tREA-ns=<10>;
		nand,tRR-ns=<40>;
		nand,tWC-ns=<40>;
		nand,tWP-ns=<20>;
	};
};

&nand0 {
	status = "ok";
	/* NXHX4000-JTAG+ has 512MB NAND */
	#address-cells = <1>;
	#size-cells = <1>;
	partition@0 {
		label = "bareboxenv";
		reg = <0x00000000 0x20000>; /* 128 kB */
	};
	partition@1 {
		label = "rootfs";
		reg = <0x00020000 (0x20000000 - 0x20000)>; /* rest of 512MB */
	};
};

&sdmmc0 {
	status = "ok";
};

&rtc0 {
	status = "ok";
};

&uart0 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
};

&uart1 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
};

&uart2 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins_noflow>;
};

&spi0 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins &spi0_cs_pins>;
	num-cs = <2>;
	cs-gpios = <&gpio2 9 GPIO_ACTIVE_LOW>,
	           <&gpio2 10 GPIO_ACTIVE_LOW>;
	#address-cells = <1>;
	#size-cells = <0>;
	spidev@0 {
		compatible = "spidev";
		reg = <0x0>;
		spi-max-frequency = <25000000>;
		/* Uncomment the line below to enable DMA.
		 * Note: DMA works only for transfer modes with 9bits and more */
//		pl022,com-mode = <0x2>;
	};
	spidev@1 {
		compatible = "spidev";
		reg = <0x1>;
		spi-max-frequency = <25000000>;
		/* Uncomment the line below to enable DMA.
		 * Note: DMA works only for transfer modes with 9bits and more */
//		pl022,com-mode = <0x2>;
	};
};

&i2c0 {
	status = "ok";
	clock-frequency = <800000>;
	/* Uncomment the line below to enable the polling mode. */
//	interrupts = <0>;
	#address-cells = <1>;
	#size-cells = <0>;
	test_eeprom@50 {
		/* The 'NXHX4000 JTAG+ rev2' board is populated with a 24FC1025.
		 * We use the 24c32 only for testing (16bit access!). */
		compatible = "24c32";
		reg = <0x50>;
		pagesize = <128>;
	};
};

&i2c1 {
	status = "ok";
	clock-frequency = <100000>;
};

&gpio0 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&gpio0_pins>;
};

&gpio1 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&gpio1_pins>;
};

/* The gpio2 is required by spi0 which uses some gpios as chip select pins. */
&gpio2 {
	status = "ok";
};

&pinctrl {
	gpio0_pins: gpio0_pins {
		pinctrl-single,pins = <
			MUX_PIN(3,9)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO9
			MUX_PIN(3,10)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO10
			MUX_PIN(3,11)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO11
			MUX_PIN(3,12)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO12
			MUX_PIN(3,13)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO13
			MUX_PIN(3,14)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO14
			MUX_PIN(3,15)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO15
		>;
	};

	gpio1_pins: gpio1_pins {
		pinctrl-single,pins = <
			MUX_PIN(4,0)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO16
			MUX_PIN(4,1)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO17
			MUX_PIN(4,2)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO18
			MUX_PIN(4,3)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO19
			MUX_PIN(4,4)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO20
			MUX_PIN(4,5)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO21
			MUX_PIN(4,6)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO22
			MUX_PIN(4,7)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_NONE)  // MMIO23
		>;
	};

	spi0_cs_pins: spi0_cs_pins {
		pinctrl-single,pins = <
			MUX_PIN(5,9)   (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_PULLUP50K)  // MMIO41 => GPIO2_9 => PL022_CS0
			MUX_PIN(5,10)  (REEMUX_1 | REEMUX_DRV_06MA | REEMUX_UDC_PULLUP50K)  // MMIO42 => GPIO2_10 => PL022_CS1
		>;
	};
};

&hcd0 {
	status = "ok";
	num-ports = <2>; /* 1 or 2 */
	pinctrl-names = "default";
	pinctrl-0 = <&hcd0_0_pins &hcd0_1_pins>;
};

&can0 {
	status = "ok";

	channels = <0 1>;

	pinctrl-names = "default";
	pinctrl-0 = <&can0_0_pins &can0_1_pins>;
};

&gmac0 {
	status = "ok";
	phy-handle = <&phy0>;
	phy-mode = "rgmii-id";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;
		phy0: gmac0_phy@0 {
			reg = <0>;
		};
		phy1: gmac1_phy@4 {
			reg = <1>;
		};
	};
};

&gmac1 {
	status = "ok";
	phy-handle = <&phy1>;
	phy-mode = "rgmii-id";
};

&display0 {
	status = "ok";

	pixel-format = <RGB565>;

	display-timings {
		native-mode = <&etq570g0dh6_ntsc>;
		etq570g0dh6_ntsc: ntsc {
			/* edt,etq570g0dh6 ntsc*/
			clock-frequency = <6400000>;
			hactive = <320>;
			vactive = <240>;
			hfront-porch = <20>;
			hback-porch = <38>;
			hsync-len = <30>;
			vfront-porch = <5>; /* 4.5 */
			vback-porch = <16>; /* 15 */
			vsync-len = <3>;
			hsync-active = <0>;
			vsync-active = <0>;
//			de-active = <1>;
			pixelclk-active = <1>;
//			interlaced = <1>;
//			doublescan = <1>;
//			doubleclk =<1>;
		};
	};
};

